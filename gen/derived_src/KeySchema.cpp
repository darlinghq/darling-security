/*
 * Generated by m4 from KeySchema.m4 please do not edit this file.
 */

#include <security_cdsa_utilities/KeySchema.h>
#include <Security/SecKey.h>

namespace KeySchema {

// Key attributes
const CSSM_DB_SCHEMA_ATTRIBUTE_INFO KeySchemaAttributeList[] =
{
    { kSecKeyKeyClass, (char*) (char*) "KeyClass", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeyPrintName, (char*) (char*) "PrintName", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecKeyAlias, (char*) (char*) "Alias", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecKeyPermanent, (char*) (char*) "Permanent", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeyPrivate, (char*) (char*) "Private", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeyModifiable, (char*) (char*) "Modifiable", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeyLabel, (char*) (char*) "Label", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecKeyApplicationTag, (char*) (char*) "ApplicationTag", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecKeyKeyCreator, (char*) (char*) "KeyCreator", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecKeyKeyType, (char*) (char*) "KeyType", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeyKeySizeInBits, (char*) (char*) "KeySizeInBits", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeyEffectiveKeySize, (char*) (char*) "EffectiveKeySize", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeyStartDate, (char*) (char*) "StartDate", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecKeyEndDate, (char*) (char*) "EndDate", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecKeySensitive, (char*) (char*) "Sensitive", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeyAlwaysSensitive, (char*) (char*) "AlwaysSensitive", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeyExtractable, (char*) (char*) "Extractable", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeyNeverExtractable, (char*) (char*) "NeverExtractable", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeyEncrypt, (char*) (char*) "Encrypt", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeyDecrypt, (char*) (char*) "Decrypt", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeyDerive, (char*) (char*) "Derive", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeySign, (char*) (char*) "Sign", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeyVerify, (char*) (char*) "Verify", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeySignRecover, (char*) (char*) "SignRecover", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeyVerifyRecover, (char*) (char*) "VerifyRecover", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeyWrap, (char*) (char*) "Wrap", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecKeyUnwrap, (char*) (char*) "Unwrap", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
};

const uint32 KeySchemaAttributeCount = sizeof(KeySchemaAttributeList) / sizeof(CSSM_DB_SCHEMA_ATTRIBUTE_INFO);

// Key indices
const CSSM_DB_SCHEMA_INDEX_INFO KeySchemaIndexList[] =
{
    // Unique (primary) index
    { kSecKeyLabel, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecKeyApplicationTag, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecKeyKeyCreator, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecKeyKeyType, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecKeyKeySizeInBits, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecKeyEffectiveKeySize, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecKeyStartDate, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecKeyEndDate, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },

    // Secondary indices
    { kSecKeyLabel, 1, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecKeyEncrypt, 2, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecKeyDecrypt, 3, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecKeyDerive, 4, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecKeySign, 5, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecKeyVerify, 6, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecKeySignRecover, 7, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecKeyVerifyRecover, 8, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecKeyWrap, 9, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecKeyUnwrap, 10, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
};

const uint32 KeySchemaIndexCount = sizeof(KeySchemaIndexList) / sizeof(CSSM_DB_SCHEMA_INDEX_INFO);

const CSSM_DB_ATTRIBUTE_INFO KeyClass =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "KeyClass"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO PrintName =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "PrintName"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO Alias =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Alias"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO Permanent =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Permanent"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO Private =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Private"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO Modifiable =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Modifiable"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO Label =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Label"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO ApplicationTag =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "ApplicationTag"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO KeyCreator =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "KeyCreator"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO KeyType =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "KeyType"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO KeySizeInBits =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "KeySizeInBits"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO EffectiveKeySize =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "EffectiveKeySize"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO StartDate =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "StartDate"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO EndDate =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "EndDate"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO Sensitive =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Sensitive"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO AlwaysSensitive =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "AlwaysSensitive"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO Extractable =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Extractable"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO NeverExtractable =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "NeverExtractable"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO Encrypt =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Encrypt"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO Decrypt =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Decrypt"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO Derive =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Derive"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO Sign =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Sign"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO Verify =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Verify"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO SignRecover =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "SignRecover"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO VerifyRecover =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "VerifyRecover"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO Wrap =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Wrap"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO Unwrap =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Unwrap"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};


} // end namespace KeySchema

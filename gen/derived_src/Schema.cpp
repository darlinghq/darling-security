/*
 * Generated by m4 from Schema.m4 please do not edit this file.
 */

#include <security_cdsa_utilities/Schema.h>

#include <Security/SecCertificate.h>
#include <Security/SecTrustPriv.h>
#include <Security/SecKeychainItemPriv.h>
#include <Security/cssmapple.h>
#include <security_utilities/errors.h>

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-const-variable"

namespace Security {

namespace KeychainCore {

namespace Schema {

// Meta attributes
const CSSM_DB_ATTRIBUTE_INFO RelationID =
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
        {(char*) "RelationID"},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    };

const CSSM_DB_ATTRIBUTE_INFO RelationName =
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
        {(char*) "RelationName"},
        CSSM_DB_ATTRIBUTE_FORMAT_STRING
    };

const CSSM_DB_ATTRIBUTE_INFO AttributeID =
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
        {(char*) "AttributeID"},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    };

const CSSM_DB_ATTRIBUTE_INFO AttributeNameFormat =
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
        {(char*) "AttributeNameFormat"},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    };

const CSSM_DB_ATTRIBUTE_INFO AttributeName =
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
        {(char*) "AttributeName"},
        CSSM_DB_ATTRIBUTE_FORMAT_STRING
    };

const CSSM_DB_ATTRIBUTE_INFO AttributeNameID =
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
        {(char*) "AttributeNameID"},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    };

const CSSM_DB_ATTRIBUTE_INFO AttributeFormat =
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
        {(char*) "AttributeFormat"},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    };

const CSSM_DB_ATTRIBUTE_INFO IndexType =
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
        {(char*) "IndexType"},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    };


// Generic password attributes
static const CSSM_DB_ATTRIBUTE_INFO GenericAttributes[] =
{
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecCreationDateItemAttr<<32|kSecCreationDateItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_TIME_DATE
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecModDateItemAttr<<32|kSecModDateItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_TIME_DATE
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecDescriptionItemAttr<<32|kSecDescriptionItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecCommentItemAttr<<32|kSecCommentItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecCreatorItemAttr<<32|kSecCreatorItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecTypeItemAttr<<32|kSecTypeItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecScriptCodeItemAttr<<32|kSecScriptCodeItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_SINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
        {(char*) "PrintName"},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
        {(char*) "Alias"},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecInvisibleItemAttr<<32|kSecInvisibleItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_SINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecNegativeItemAttr<<32|kSecNegativeItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_SINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecCustomIconItemAttr<<32|kSecCustomIconItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_SINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecProtectedDataItemAttr<<32|kSecProtectedDataItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecAccountItemAttr<<32|kSecAccountItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecServiceItemAttr<<32|kSecServiceItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecGenericItemAttr<<32|kSecGenericItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
};

// Appleshare password attributes
static const CSSM_DB_ATTRIBUTE_INFO AppleshareAttributes[] =
{
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecCreationDateItemAttr<<32|kSecCreationDateItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_TIME_DATE
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecModDateItemAttr<<32|kSecModDateItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_TIME_DATE
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecDescriptionItemAttr<<32|kSecDescriptionItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecCommentItemAttr<<32|kSecCommentItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecCreatorItemAttr<<32|kSecCreatorItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecTypeItemAttr<<32|kSecTypeItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecScriptCodeItemAttr<<32|kSecScriptCodeItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_SINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
        {(char*) "PrintName"},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
        {(char*) "Alias"},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecInvisibleItemAttr<<32|kSecInvisibleItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_SINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecNegativeItemAttr<<32|kSecNegativeItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_SINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecCustomIconItemAttr<<32|kSecCustomIconItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_SINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecProtectedDataItemAttr<<32|kSecProtectedDataItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecAccountItemAttr<<32|kSecAccountItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecVolumeItemAttr<<32|kSecVolumeItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecServerItemAttr<<32|kSecServerItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecProtocolItemAttr<<32|kSecProtocolItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecAddressItemAttr<<32|kSecAddressItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecSignatureItemAttr<<32|kSecSignatureItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
};

// Internet password attributes
static const CSSM_DB_ATTRIBUTE_INFO InternetAttributes[] =
{
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecCreationDateItemAttr<<32|kSecCreationDateItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_TIME_DATE
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecModDateItemAttr<<32|kSecModDateItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_TIME_DATE
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecDescriptionItemAttr<<32|kSecDescriptionItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecCommentItemAttr<<32|kSecCommentItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecCreatorItemAttr<<32|kSecCreatorItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecTypeItemAttr<<32|kSecTypeItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecScriptCodeItemAttr<<32|kSecScriptCodeItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_SINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
        {(char*) "PrintName"},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
        {(char*) "Alias"},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecInvisibleItemAttr<<32|kSecInvisibleItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_SINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecNegativeItemAttr<<32|kSecNegativeItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_SINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecCustomIconItemAttr<<32|kSecCustomIconItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_SINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecProtectedDataItemAttr<<32|kSecProtectedDataItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecAccountItemAttr<<32|kSecAccountItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecSecurityDomainItemAttr<<32|kSecSecurityDomainItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecServerItemAttr<<32|kSecServerItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecProtocolItemAttr<<32|kSecProtocolItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecAuthenticationTypeItemAttr<<32|kSecAuthenticationTypeItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecPortItemAttr<<32|kSecPortItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    },
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecPathItemAttr<<32|kSecPathItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    },
};

#define kGenericCreationDate GenericAttributes[0];
#define kGenericModDate GenericAttributes[1];
#define kGenericDescription GenericAttributes[2];
#define kGenericComment GenericAttributes[3];
#define kGenericCreator GenericAttributes[4];
#define kGenericType GenericAttributes[5];
#define kGenericScriptCode GenericAttributes[6];
#define kGenericPrintName GenericAttributes[7];
#define kGenericAlias GenericAttributes[8];
#define kGenericInvisible GenericAttributes[9];
#define kGenericNegative GenericAttributes[10];
#define kGenericCustomIcon GenericAttributes[11];
#define kGenericProtected GenericAttributes[12];
#define kGenericAccount GenericAttributes[13];
#define kGenericService GenericAttributes[14];
#define kGenericGeneric GenericAttributes[15];
#define kAppleshareCreationDate AppleshareAttributes[0];
#define kAppleshareModDate AppleshareAttributes[1];
#define kAppleshareDescription AppleshareAttributes[2];
#define kAppleshareComment AppleshareAttributes[3];
#define kAppleshareCreator AppleshareAttributes[4];
#define kAppleshareType AppleshareAttributes[5];
#define kAppleshareScriptCode AppleshareAttributes[6];
#define kApplesharePrintName AppleshareAttributes[7];
#define kAppleshareAlias AppleshareAttributes[8];
#define kAppleshareInvisible AppleshareAttributes[9];
#define kAppleshareNegative AppleshareAttributes[10];
#define kAppleshareCustomIcon AppleshareAttributes[11];
#define kAppleshareProtected AppleshareAttributes[12];
#define kAppleshareAccount AppleshareAttributes[13];
#define kAppleshareVolume AppleshareAttributes[14];
#define kAppleshareServer AppleshareAttributes[15];
#define kAppleshareProtocol AppleshareAttributes[16];
#define kAppleshareAddress AppleshareAttributes[17];
#define kAppleshareSignature AppleshareAttributes[18];
#define kInternetCreationDate InternetAttributes[0];
#define kInternetModDate InternetAttributes[1];
#define kInternetDescription InternetAttributes[2];
#define kInternetComment InternetAttributes[3];
#define kInternetCreator InternetAttributes[4];
#define kInternetType InternetAttributes[5];
#define kInternetScriptCode InternetAttributes[6];
#define kInternetPrintName InternetAttributes[7];
#define kInternetAlias InternetAttributes[8];
#define kInternetInvisible InternetAttributes[9];
#define kInternetNegative InternetAttributes[10];
#define kInternetCustomIcon InternetAttributes[11];
#define kInternetProtected InternetAttributes[12];
#define kInternetAccount InternetAttributes[13];
#define kInternetSecurityDomain InternetAttributes[14];
#define kInternetServer InternetAttributes[15];
#define kInternetProtocol InternetAttributes[16];
#define kInternetAuthType InternetAttributes[17];
#define kInternetPort InternetAttributes[18];
#define kInternetPath InternetAttributes[19];
// X509Certificate attributes
const CSSM_DB_SCHEMA_ATTRIBUTE_INFO X509CertificateSchemaAttributeList[] =
{
    { kSecCertTypeItemAttr, (char*) "CertType", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecCertEncodingItemAttr, (char*) "CertEncoding", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecLabelItemAttr, (char*) "PrintName", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecAlias, (char*) "Alias", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecSubjectItemAttr, (char*) "Subject", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecIssuerItemAttr, (char*) "Issuer", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecSerialNumberItemAttr, (char*) "SerialNumber", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecSubjectKeyIdentifierItemAttr, (char*) "SubjectKeyIdentifier", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecPublicKeyHashItemAttr, (char*) "PublicKeyHash", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
};

const uint32 X509CertificateSchemaAttributeCount = sizeof(X509CertificateSchemaAttributeList) / sizeof(CSSM_DB_SCHEMA_ATTRIBUTE_INFO);

// X509Certificate indices
const CSSM_DB_SCHEMA_INDEX_INFO X509CertificateSchemaIndexList[] =
{
    // Unique (primary) index
    { kSecCertTypeItemAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecIssuerItemAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecSerialNumberItemAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },

    // Secondary indices
    { kSecCertTypeItemAttr, 1, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecAlias, 2, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecSubjectItemAttr, 3, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecIssuerItemAttr, 4, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecSerialNumberItemAttr, 5, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecSubjectKeyIdentifierItemAttr, 6, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecPublicKeyHashItemAttr, 7, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
};

const uint32 X509CertificateSchemaIndexCount = sizeof(X509CertificateSchemaIndexList) / sizeof(CSSM_DB_SCHEMA_INDEX_INFO);

const CSSM_DB_ATTRIBUTE_INFO kX509CertificateCertType =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "CertType"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO kX509CertificateCertEncoding =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "CertEncoding"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO kX509CertificatePrintName =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "PrintName"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kX509CertificateAlias =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Alias"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kX509CertificateSubject =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Subject"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kX509CertificateIssuer =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Issuer"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kX509CertificateSerialNumber =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "SerialNumber"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kX509CertificateSubjectKeyIdentifier =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "SubjectKeyIdentifier"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kX509CertificatePublicKeyHash =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "PublicKeyHash"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};


// X509Crl attributes
const CSSM_DB_SCHEMA_ATTRIBUTE_INFO X509CrlSchemaAttributeList[] =
{
    { kSecCrlType, (char*) "CrlType", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecCrlEncodingItemAttr, (char*) "CrlEncoding", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecLabelItemAttr, (char*) "PrintName", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecAlias, (char*) "Alias", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecIssuerItemAttr, (char*) "Issuer", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecThisUpdateItemAttr, (char*) "ThisUpdate", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecNextUpdateItemAttr, (char*) "NextUpdate", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecUriItemAttr, (char*) "URI", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecCrlNumberItemAttr, (char*) "CrlNumber", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecDeltaCrlNumberItemAttr, (char*) "DeltaCrlNumber", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
};

const uint32 X509CrlSchemaAttributeCount = sizeof(X509CrlSchemaAttributeList) / sizeof(CSSM_DB_SCHEMA_ATTRIBUTE_INFO);

// X509Crl indices
const CSSM_DB_SCHEMA_INDEX_INFO X509CrlSchemaIndexList[] =
{
    // Unique (primary) index
    { kSecCrlType, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecIssuerItemAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecThisUpdateItemAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecNextUpdateItemAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecUriItemAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },

    // Secondary indices
    { kSecCrlType, 1, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecIssuerItemAttr, 2, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecThisUpdateItemAttr, 3, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecNextUpdateItemAttr, 4, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecUriItemAttr, 5, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecCrlNumberItemAttr, 6, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecDeltaCrlNumberItemAttr, 7, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
};

const uint32 X509CrlSchemaIndexCount = sizeof(X509CrlSchemaIndexList) / sizeof(CSSM_DB_SCHEMA_INDEX_INFO);

const CSSM_DB_ATTRIBUTE_INFO kX509CrlCrlType =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "CrlType"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO kX509CrlCrlEncoding =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "CrlEncoding"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO kX509CrlPrintName =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "PrintName"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kX509CrlAlias =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Alias"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kX509CrlIssuer =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Issuer"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kX509CrlThisUpdate =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "ThisUpdate"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kX509CrlNextUpdate =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "NextUpdate"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kX509CrlURI =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "URI"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kX509CrlCrlNumber =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "CrlNumber"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO kX509CrlDeltaCrlNumber =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "DeltaCrlNumber"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};


// UserTrust attributes
const CSSM_DB_SCHEMA_ATTRIBUTE_INFO UserTrustSchemaAttributeList[] =
{
    { kSecTrustCertAttr, (char*) "TrustedCertificate", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecTrustPolicyAttr, (char*) "TrustedPolicy", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecLabelItemAttr, (char*) "PrintName", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
};

const uint32 UserTrustSchemaAttributeCount = sizeof(UserTrustSchemaAttributeList) / sizeof(CSSM_DB_SCHEMA_ATTRIBUTE_INFO);

// UserTrust indices
const CSSM_DB_SCHEMA_INDEX_INFO UserTrustSchemaIndexList[] =
{
    // Unique (primary) index
    { kSecTrustCertAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecTrustPolicyAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },

    // Secondary indices
    { kSecTrustCertAttr, 1, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecTrustPolicyAttr, 2, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
};

const uint32 UserTrustSchemaIndexCount = sizeof(UserTrustSchemaIndexList) / sizeof(CSSM_DB_SCHEMA_INDEX_INFO);

const CSSM_DB_ATTRIBUTE_INFO kUserTrustTrustedCertificate =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "TrustedCertificate"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kUserTrustTrustedPolicy =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "TrustedPolicy"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kUserTrustPrintName =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "PrintName"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};


// UnlockReferral attributes
const CSSM_DB_SCHEMA_ATTRIBUTE_INFO UnlockReferralSchemaAttributeList[] =
{
    { kSecReferralTypeAttr, (char*) "Type", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecReferralDbNameAttr, (char*) "DbName", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_STRING },
    { kSecReferralDbNetnameAttr, (char*) "DbNetname", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecReferralDbGuidAttr, (char*) "DbGuid", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecReferralDbSSIDAttr, (char*) "DbSSID", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecReferralDbSSTypeAttr, (char*) "DbSSType", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kSecReferralKeyLabelAttr, (char*) "KeyLabel", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecReferralKeyAppTagAttr, (char*) "KeyAppTag", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecLabelItemAttr, (char*) "PrintName", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecAlias, (char*) "Alias", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
};

const uint32 UnlockReferralSchemaAttributeCount = sizeof(UnlockReferralSchemaAttributeList) / sizeof(CSSM_DB_SCHEMA_ATTRIBUTE_INFO);

// UnlockReferral indices
const CSSM_DB_SCHEMA_INDEX_INFO UnlockReferralSchemaIndexList[] =
{
    // Unique (primary) index
    { kSecReferralTypeAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecReferralDbNameAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecReferralDbNetnameAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecReferralDbGuidAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecReferralDbSSIDAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecReferralDbSSTypeAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },

    // Secondary indices
    { kSecReferralTypeAttr, 1, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecReferralDbNameAttr, 2, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecReferralDbNetnameAttr, 3, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecReferralDbGuidAttr, 4, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecReferralDbSSIDAttr, 5, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecReferralDbSSTypeAttr, 6, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecReferralKeyLabelAttr, 7, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kSecReferralKeyAppTagAttr, 8, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
};

const uint32 UnlockReferralSchemaIndexCount = sizeof(UnlockReferralSchemaIndexList) / sizeof(CSSM_DB_SCHEMA_INDEX_INFO);

const CSSM_DB_ATTRIBUTE_INFO kUnlockReferralType =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Type"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO kUnlockReferralDbName =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "DbName"},
    CSSM_DB_ATTRIBUTE_FORMAT_STRING
};

const CSSM_DB_ATTRIBUTE_INFO kUnlockReferralDbNetname =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "DbNetname"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kUnlockReferralDbGuid =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "DbGuid"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kUnlockReferralDbSSID =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "DbSSID"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO kUnlockReferralDbSSType =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "DbSSType"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO kUnlockReferralKeyLabel =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "KeyLabel"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kUnlockReferralKeyAppTag =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "KeyAppTag"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kUnlockReferralPrintName =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "PrintName"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kUnlockReferralAlias =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "Alias"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};


// Extended Attribute
// ExtendedAttribute attributes
const CSSM_DB_SCHEMA_ATTRIBUTE_INFO ExtendedAttributeSchemaAttributeList[] =
{
    { kExtendedAttrRecordTypeAttr, (char*) "RecordType", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_UINT32 },
    { kExtendedAttrItemIDAttr, (char*) "ItemID", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kExtendedAttrAttributeNameAttr, (char*) "AttributeName", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
    { kSecModDateItemAttr, (char*) "ModDate", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_TIME_DATE },
    { kExtendedAttrAttributeValueAttr, (char*) "AttributeValue", { 0, NULL }, CSSM_DB_ATTRIBUTE_FORMAT_BLOB },
};

const uint32 ExtendedAttributeSchemaAttributeCount = sizeof(ExtendedAttributeSchemaAttributeList) / sizeof(CSSM_DB_SCHEMA_ATTRIBUTE_INFO);

// ExtendedAttribute indices
const CSSM_DB_SCHEMA_INDEX_INFO ExtendedAttributeSchemaIndexList[] =
{
    // Unique (primary) index
    { kExtendedAttrRecordTypeAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kExtendedAttrItemIDAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kExtendedAttrAttributeNameAttr, 0, CSSM_DB_INDEX_UNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },

    // Secondary indices
    { kExtendedAttrRecordTypeAttr, 1, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kExtendedAttrItemIDAttr, 2, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
    { kExtendedAttrAttributeNameAttr, 3, CSSM_DB_INDEX_NONUNIQUE, CSSM_DB_INDEX_ON_ATTRIBUTE },
};

const uint32 ExtendedAttributeSchemaIndexCount = sizeof(ExtendedAttributeSchemaIndexList) / sizeof(CSSM_DB_SCHEMA_INDEX_INFO);

const CSSM_DB_ATTRIBUTE_INFO kExtendedAttributeRecordType =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "RecordType"},
    CSSM_DB_ATTRIBUTE_FORMAT_UINT32
};

const CSSM_DB_ATTRIBUTE_INFO kExtendedAttributeItemID =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "ItemID"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kExtendedAttributeAttributeName =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "AttributeName"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};

const CSSM_DB_ATTRIBUTE_INFO kExtendedAttributeModDate =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "ModDate"},
    CSSM_DB_ATTRIBUTE_FORMAT_TIME_DATE
};

const CSSM_DB_ATTRIBUTE_INFO kExtendedAttributeAttributeValue =
{
    CSSM_DB_ATTRIBUTE_NAME_AS_STRING,
    {(char*) "AttributeValue"},
    CSSM_DB_ATTRIBUTE_FORMAT_BLOB
};


// Generic password indices
static const CSSM_DB_INDEX_INFO GenericIndices[] =
{
  // Unique (primary) index
  {
    CSSM_DB_INDEX_UNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecAccountItemAttr<<32|kSecAccountItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
  {
    CSSM_DB_INDEX_UNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecServiceItemAttr<<32|kSecServiceItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },

  // Secondary indices
  {
    CSSM_DB_INDEX_NONUNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecAccountItemAttr<<32|kSecAccountItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
  {
    CSSM_DB_INDEX_NONUNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecServiceItemAttr<<32|kSecServiceItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
};

// Appleshare password indices
static const CSSM_DB_INDEX_INFO AppleshareIndices[] =
{
  // Unique (primary) index
  {
    CSSM_DB_INDEX_UNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecAccountItemAttr<<32|kSecAccountItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
  {
    CSSM_DB_INDEX_UNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecVolumeItemAttr<<32|kSecVolumeItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
  {
    CSSM_DB_INDEX_UNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecAddressItemAttr<<32|kSecAddressItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
  {
    CSSM_DB_INDEX_UNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecSignatureItemAttr<<32|kSecSignatureItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },

  // Secondary indices
  {
    CSSM_DB_INDEX_NONUNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecAccountItemAttr<<32|kSecAccountItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
  {
    CSSM_DB_INDEX_NONUNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecVolumeItemAttr<<32|kSecVolumeItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
  {
    CSSM_DB_INDEX_NONUNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecAddressItemAttr<<32|kSecAddressItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
  {
    CSSM_DB_INDEX_NONUNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecSignatureItemAttr<<32|kSecSignatureItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
};

// Internet password indices
static const CSSM_DB_INDEX_INFO InternetIndices[] =
{
  // Unique (primary) index
  {
    CSSM_DB_INDEX_UNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecAccountItemAttr<<32|kSecAccountItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
  {
    CSSM_DB_INDEX_UNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecSecurityDomainItemAttr<<32|kSecSecurityDomainItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
  {
    CSSM_DB_INDEX_UNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecServerItemAttr<<32|kSecServerItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
  {
    CSSM_DB_INDEX_UNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecProtocolItemAttr<<32|kSecProtocolItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    }
  },
  {
    CSSM_DB_INDEX_UNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecAuthenticationTypeItemAttr<<32|kSecAuthenticationTypeItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
  {
    CSSM_DB_INDEX_UNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecPortItemAttr<<32|kSecPortItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    }
  },
  {
    CSSM_DB_INDEX_UNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecPathItemAttr<<32|kSecPathItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },

  // Secondary indices
  {
    CSSM_DB_INDEX_NONUNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecAccountItemAttr<<32|kSecAccountItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
  {
    CSSM_DB_INDEX_NONUNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecSecurityDomainItemAttr<<32|kSecSecurityDomainItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
  {
    CSSM_DB_INDEX_NONUNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecServerItemAttr<<32|kSecServerItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
  {
    CSSM_DB_INDEX_NONUNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecProtocolItemAttr<<32|kSecProtocolItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    }
  },
  {
    CSSM_DB_INDEX_NONUNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecAuthenticationTypeItemAttr<<32|kSecAuthenticationTypeItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
  {
    CSSM_DB_INDEX_NONUNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecPortItemAttr<<32|kSecPortItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_UINT32
    }
  },
  {
    CSSM_DB_INDEX_NONUNIQUE,
    CSSM_DB_INDEX_ON_ATTRIBUTE,
    {
        CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER,
        {(char *)((uint64_t)kSecPathItemAttr<<32|kSecPathItemAttr)},
        CSSM_DB_ATTRIBUTE_FORMAT_BLOB
    }
  },
};


static const CSSM_DB_RECORD_ATTRIBUTE_INFO Attributes[] =
{
    {
        CSSM_DL_DB_RECORD_GENERIC_PASSWORD,
        sizeof(GenericAttributes) / sizeof(CSSM_DB_ATTRIBUTE_INFO),
        const_cast<CSSM_DB_ATTRIBUTE_INFO_PTR>(GenericAttributes)
    },
    {
        CSSM_DL_DB_RECORD_APPLESHARE_PASSWORD,
        sizeof(AppleshareAttributes) / sizeof(CSSM_DB_ATTRIBUTE_INFO),
        const_cast<CSSM_DB_ATTRIBUTE_INFO_PTR>(AppleshareAttributes)
    },
    {
        CSSM_DL_DB_RECORD_INTERNET_PASSWORD,
        sizeof(InternetAttributes) / sizeof(CSSM_DB_ATTRIBUTE_INFO),
        const_cast<CSSM_DB_ATTRIBUTE_INFO_PTR>(InternetAttributes)
    }
};

static const CSSM_DB_RECORD_INDEX_INFO Indices[] =
{
    {
        CSSM_DL_DB_RECORD_GENERIC_PASSWORD,
        sizeof(GenericIndices) / sizeof(CSSM_DB_INDEX_INFO),
        const_cast<CSSM_DB_INDEX_INFO_PTR>(GenericIndices)
    },
    {
        CSSM_DL_DB_RECORD_APPLESHARE_PASSWORD,
        sizeof(AppleshareIndices) / sizeof(CSSM_DB_INDEX_INFO),
        const_cast<CSSM_DB_INDEX_INFO_PTR>(AppleshareIndices)
    },
    {
        CSSM_DL_DB_RECORD_INTERNET_PASSWORD,
        sizeof(InternetIndices) / sizeof(CSSM_DB_INDEX_INFO),
        const_cast<CSSM_DB_INDEX_INFO_PTR>(InternetIndices)
    }
};

static const CSSM_DB_PARSING_MODULE_INFO ParseInfos[] =
{
    {
        CSSM_DB_RECORDTYPE_APP_DEFINED_START,
        {
            {0,0,0,{0}},
            {0,0},
            0,
            0
        }
    },
    {
        CSSM_DB_RECORDTYPE_APP_DEFINED_START,
        {
            {0,0,0,{0}},
            {0,0},
            0,
            0
        }
    },
    {
        CSSM_DB_RECORDTYPE_APP_DEFINED_START,
        {
            {0,0,0,{0}},
            {0,0},
            0,
            0
        }
    }
};

//
// Public stuff
//
const CSSM_DBINFO DBInfo =
{
    sizeof(Attributes) / sizeof(CSSM_DB_RECORD_ATTRIBUTE_INFO),
    const_cast<CSSM_DB_PARSING_MODULE_INFO_PTR>(ParseInfos),
    const_cast<CSSM_DB_RECORD_ATTRIBUTE_INFO_PTR>(Attributes),
    const_cast<CSSM_DB_RECORD_INDEX_INFO_PTR>(Indices),
    CSSM_TRUE,
    NULL,
    NULL
};

//
// Schema methods
//
CSSM_DB_RECORDTYPE
recordTypeFor(SecItemClass itemClass)
{
    switch (itemClass)
    {
    case kSecGenericPasswordItemClass: return CSSM_DL_DB_RECORD_GENERIC_PASSWORD;
    case kSecInternetPasswordItemClass: return CSSM_DL_DB_RECORD_INTERNET_PASSWORD;
    case 'ashp': return CSSM_DL_DB_RECORD_APPLESHARE_PASSWORD;
    default: return CSSM_DB_RECORDTYPE(itemClass);
    }
}

SecItemClass
itemClassFor(CSSM_DB_RECORDTYPE recordType)
{
    switch (recordType)
    {
    case CSSM_DL_DB_RECORD_GENERIC_PASSWORD: return kSecGenericPasswordItemClass;
    case CSSM_DL_DB_RECORD_INTERNET_PASSWORD: return kSecInternetPasswordItemClass;
    case CSSM_DL_DB_RECORD_APPLESHARE_PASSWORD: return (SecItemClass) 'ashp';
    default: return SecItemClass(recordType);
    }
}

bool
haveAttributeInfo(SecKeychainAttrType attrType)
{
switch (attrType)
{
case kSecCreationDateItemAttr: return true;
case kSecModDateItemAttr: return true;
case kSecDescriptionItemAttr: return true;
case kSecCommentItemAttr: return true;
case kSecCreatorItemAttr: return true;
case kSecTypeItemAttr: return true;
case kSecScriptCodeItemAttr: return true;
case kSecLabelItemAttr: return true;
case kSecAlias: return true;
case kSecInvisibleItemAttr: return true;
case kSecNegativeItemAttr: return true;
case kSecCustomIconItemAttr: return true;
/* Unique Generic password attributes */
case kSecAccountItemAttr: return true;
case kSecServiceItemAttr: return true;
case kSecGenericItemAttr: return true;
/* Unique Appleshare password attributes */
case kSecVolumeItemAttr: return true;
case kSecAddressItemAttr: return true;
case kSecSignatureItemAttr: return true;
/* Unique AppleShare and Internet attributes */
case kSecServerItemAttr: return true;
case kSecProtocolItemAttr: return true;
/* Unique Internet password attributes */
case kSecSecurityDomainItemAttr: return true;
case kSecAuthenticationTypeItemAttr: return true;
case kSecPortItemAttr: return true;
case kSecPathItemAttr: return true;
/* Unique Certificate attributes */
case kSecCertTypeItemAttr: return true;
case kSecCertEncodingItemAttr: return true;
case kSecSubjectItemAttr: return true;
case kSecIssuerItemAttr: return true;
case kSecSerialNumberItemAttr: return true;
case kSecSubjectKeyIdentifierItemAttr: return true;
case kSecPublicKeyHashItemAttr: return true;
/* Unique UserTrust attributes */
case kSecTrustCertAttr: return true;
case kSecTrustPolicyAttr: return true;
/* Unique UnlockReferral attributes */
case kSecReferralTypeAttr: return true;
case kSecReferralDbNameAttr: return true;
case kSecReferralDbGuidAttr: return true;
case kSecReferralDbSSIDAttr: return true;
case kSecReferralDbSSTypeAttr: return true;
case kSecReferralDbNetnameAttr: return true;
case kSecReferralKeyLabelAttr: return true;
case kSecReferralKeyAppTagAttr: return true;
/* Unique ExtendedAttribute attributes */
case kExtendedAttrRecordTypeAttr: return true;
case kExtendedAttrItemIDAttr: return true;
case kExtendedAttrAttributeNameAttr: return true;
case kExtendedAttrAttributeValueAttr: return true;
/* ??? */
case kSecProtectedDataItemAttr:  return true;
default:
{
if (attrType == 7)
{
return true;
}
else if (attrType == 8)
{
return true;
}
return false;
}
}
}

const CSSM_DB_ATTRIBUTE_INFO &
attributeInfo(SecKeychainAttrType attrType)
{
    switch (attrType)
    {
    case kSecCreationDateItemAttr: return kGenericCreationDate;
    case kSecModDateItemAttr: return kGenericModDate;
    case kSecDescriptionItemAttr: return kGenericDescription;
    case kSecCommentItemAttr: return kGenericComment;
    case kSecCreatorItemAttr: return kGenericCreator;
    case kSecTypeItemAttr: return kGenericType;
    case kSecScriptCodeItemAttr: return kGenericScriptCode;
    case kSecLabelItemAttr: return kGenericPrintName;
    case kSecAlias: return kGenericAlias;
    case kSecInvisibleItemAttr: return kGenericInvisible;
    case kSecNegativeItemAttr: return kGenericNegative;
    case kSecCustomIconItemAttr: return kGenericCustomIcon;
    /* Unique Generic password attributes */
    case kSecAccountItemAttr: return kGenericAccount;
    case kSecServiceItemAttr: return kGenericService;
    case kSecGenericItemAttr: return kGenericGeneric;
    /* Unique Appleshare password attributes */
    case kSecVolumeItemAttr: return kAppleshareVolume;
    case kSecAddressItemAttr: return kAppleshareAddress;
    case kSecSignatureItemAttr: return kAppleshareSignature;
    /* Unique AppleShare and Internet attributes */
    case kSecServerItemAttr: return kAppleshareServer;
    case kSecProtocolItemAttr: return kAppleshareProtocol;
    /* Unique Internet password attributes */
    case kSecSecurityDomainItemAttr: return kInternetSecurityDomain;
    case kSecAuthenticationTypeItemAttr: return kInternetAuthType;
    case kSecPortItemAttr: return kInternetPort;
    case kSecPathItemAttr: return kInternetPath;
	/* Unique Certificate attributes */
	case kSecCertTypeItemAttr: return kX509CertificateCertType;
	case kSecCertEncodingItemAttr: return kX509CertificateCertEncoding;
	case kSecSubjectItemAttr: return kX509CertificateSubject;
	case kSecIssuerItemAttr: return kX509CertificateIssuer;
	case kSecSerialNumberItemAttr: return kX509CertificateSerialNumber;
	case kSecSubjectKeyIdentifierItemAttr: return kX509CertificateSubjectKeyIdentifier;
	case kSecPublicKeyHashItemAttr: return kX509CertificatePublicKeyHash;
	/* Unique UserTrust attributes */
	case kSecTrustCertAttr: return kUserTrustTrustedCertificate;
	case kSecTrustPolicyAttr: return kUserTrustTrustedPolicy;
	/* Unique UnlockReferral attributes */
	case kSecReferralTypeAttr: return kUnlockReferralType;
	case kSecReferralDbNameAttr: return kUnlockReferralDbName;
	case kSecReferralDbGuidAttr: return kUnlockReferralDbGuid;
	case kSecReferralDbSSIDAttr: return kUnlockReferralDbSSID;
	case kSecReferralDbSSTypeAttr: return kUnlockReferralDbSSType;
	case kSecReferralDbNetnameAttr: return kUnlockReferralDbNetname;
	case kSecReferralKeyLabelAttr: return kUnlockReferralKeyLabel;
	case kSecReferralKeyAppTagAttr: return kUnlockReferralKeyAppTag;
	/* Unique ExtendedAttribute attributes */
	case kExtendedAttrRecordTypeAttr: return kExtendedAttributeRecordType;
	case kExtendedAttrItemIDAttr: return kExtendedAttributeItemID;
	case kExtendedAttrAttributeNameAttr: return kExtendedAttributeAttributeName;
	case kExtendedAttrAttributeValueAttr: return kExtendedAttributeAttributeValue;
	/* ??? */
	case kSecProtectedDataItemAttr:  return kGenericProtected;
    default:
	{
		if (attrType == 7)
		{
			return kGenericPrintName;
		}
		else if (attrType == 8)
		{
			return kGenericAlias;
		}
		MacOSError::throwMe(errSecNoSuchAttr);
    }
	}
}

} // end namespace Schema

} // end namespace KeychainCore

} // end namespace Security

#pragma clang diagnostic pop
